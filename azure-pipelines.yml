trigger:
  branches:
    include:
      - master
      - main
  paths:
    include:
      - backend/*
      - frontend/*
      - infra/*   # include Terraform dir

pool:
  name: Default
  demands: Agent.Name -equals MyAgent

variables:
  DOCKER_BUILDKIT: 1

stages:
  - stage: BuildAndTest
    jobs:
      - job: Backend
        displayName: "Backend: Build & Test"
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.11'

          - task: Docker@2
            displayName: 'Build backend image'
            inputs:
              command: build
              repository: pkotopoulis/quote-backend
              Dockerfile: backend/quote-api/Dockerfile
              tags: latest

          - script: |
              pip install -r backend/requirements.txt
              pytest backend/tests/
            displayName: "Run Pytest for backend"

      - job: Frontend
        displayName: "Frontend: Build"
        steps:
          - task: Docker@2
            displayName: 'Build frontend image'
            inputs:
              command: build
              repository: pkotopoulis/quote-frontend
              Dockerfile: frontend/Dockerfile
              tags: latest

  - stage: Terraform_Staging
    displayName: "Deploy Infrastructure to Staging"
    dependsOn: BuildAndTest
    condition: succeeded()
    jobs:
      - job: terraformApply
        displayName: "Terraform Apply"
        pool:
          name: Default
          demands: Agent.Name -equals MyAgent
        steps:
          - checkout: self

          - script: |
              cd infra
              terraform init
              terraform plan
              terraform apply -auto-approve
            displayName: "Run Terraform"
