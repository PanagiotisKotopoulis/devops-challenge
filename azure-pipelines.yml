trigger:
  branches:
    include:
      - master
      - main
  paths:
    include:
      - backend/*
      - frontend/*
      - terraform/*

pool:
  name: Default  # Use your self-hosted agent pool name

variables:
  DOCKER_BUILDKIT: 1

stages:
  - stage: BuildAndTest
    displayName: "Build & Test"
    jobs:
      - job: Backend
        displayName: "Backend: Build & Test"
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.11'

          - task: Docker@2
            displayName: 'Build backend image'
            inputs:
              command: build
              repository: pkotopoulis/quote-backend
              Dockerfile: backend/quote-api/Dockerfile
              tags: latest

          - script: |
              pip install -r backend/quote-api/requirements.txt
              set PYTHONPATH=backend/quote-api
              pytest backend/quote-api/
            displayName: "Run Pytest for backend"

      - job: Frontend
        displayName: "Frontend: Build"
        steps:
          - task: Docker@2
            displayName: 'Build frontend image'
            inputs:
              command: build
              repository: pkotopoulis/quote-frontend
              Dockerfile: frontend/Dockerfile
              tags: latest

  - stage: DeployStaging
    displayName: "Deploy to Staging"
    dependsOn: BuildAndTest
    jobs:
      - job: TerraformApply
        displayName: "Terraform Apply"
        steps:
          - checkout: self
          - task: AzureCLI@2
            inputs:
              azureSubscription: 'azure-rm-terraform'
              scriptType: ps
              scriptLocation: inlineScript
              inlineScript: |
                cd terraform
                terraform init
                terraform apply -auto-approve
            displayName: "Terraform Deploy to Staging"

  - stage: Approval
    displayName: "Manual Approval"
    dependsOn: DeployStaging
    jobs:
      - job: WaitForApproval
        displayName: "Await Manual Approval"
        pool: server
        steps:
          - task: ManualValidation@0
            inputs:
              instructions: 'Approve to proceed to production.'
              onTimeout: 'reject'
              timeout: '1d'

  - stage: DeployProduction
    displayName: "Deploy to Production"
    dependsOn: Approval
    jobs:
      - job: Deploy
        displayName: "Production Deployment"
        steps:
          - task: AzureCLI@2
            inputs:
              azureSubscription: 'azure-rm-terraform'
              scriptType: ps
              scriptLocation: inlineScript
              inlineScript: |
                cd terraform
                terraform apply -auto-approve
            displayName: "Terraform Deploy to Production"

        # Optional rollback stub
        # - task: Bash@3
        #   condition: failed()
        #   inputs:
        #     targetType: inline
        #     script: |
        #       echo "Deployment failed. Rollback logic here..."
